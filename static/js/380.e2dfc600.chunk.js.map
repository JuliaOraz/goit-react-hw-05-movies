{"version":3,"file":"static/js/380.e2dfc600.chunk.js","mappings":"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","sources":["components/API.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/MoviesPage/MoviesPage.styled.jsx","components/LoadMore/LoadMore.styled.jsx","components/LoadMore/LoadMore.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\nimport defaultImg from '../img/no_image.jpg';\n\nconst API_KEY = '2994e3a31c3cad99fd99bf3fe61d916f';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const getPoster = img => {\n  if (img === null) {\n    return defaultImg;\n  }\n  return `https://image.tmdb.org/t/p/w500${img}`;\n};\n\nexport const getTrendingMovies = async (page = 1) => {\n  const { data } = await axios.get(\n    `/trending/movie/week?api_key=${API_KEY}&page=${page}`\n  );\n  return data;\n};\n\nexport const getSearchMovies = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n  );\n  return data;\n};\n\nexport const getMovieId = async movie_id => {\n  const { data } = await axios.get(\n    `/movie/${movie_id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getCast = async movie_id => {\n  const { data } = await axios.get(\n    `/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\nexport const getReviews = async movie_id => {\n  const { data } = await axios.get(\n    `/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: -10px;\n  margin-right: -10px;\n  margin-bottom: 50px;\n`;\nexport const MovieItem = styled.li`\n  margin-left: 10px;\n  margin-right: 10px;\n  margin-top: 20px;\n  width: calc((100% - 3 * 20px) / 3);\n\n  &:nth-of-type(-n + 3) {\n    margin-top: 0;\n  }\n`;\nexport const MovieLink = styled(Link)`\n  display: block;\n  text-decoration: none;\n  border: 1px solid #ededed;\n\n  &:hover > h2 {\n    color: #5ac8fa;\n  }\n`;\nexport const MovieImg = styled.img`\n  background-color: #ededed;\n  min-height: 610px;\n  margin-bottom: 15px;\n`;\nexport const MovieTitle = styled.h2`\n  font-size: 22px;\n  color: #000;\n  margin-bottom: 15px;\n  padding: 0 15px;\n  transition: color 250ms linear;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getPoster } from '../API';\nimport {\n  MovieContainer,\n  MovieItem,\n  MovieLink,\n  MovieImg,\n  MovieTitle,\n} from './MovieList.styled';\n\nexport default function MovieList({ movies }) {\n  const location = useLocation();\n\n  const movieItem = movies.map(({ id, poster_path, title }) => {\n    const img = getPoster(poster_path);\n\n    return (\n      <MovieItem key={id}>\n        <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n          <MovieImg src={img} alt={title} />\n          <MovieTitle>{title}</MovieTitle>\n        </MovieLink>\n      </MovieItem>\n    );\n  });\n\n  return <MovieContainer>{movieItem}</MovieContainer>;\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const SearchBox = styled.div`\n  margin-bottom: 50px;\n`;\nexport const SearchForm = styled.form`\n  max-width: 400px;\n  margin: auto;\n  position: relative;\n  width: 100%;\n  display: flex;\n`;\nexport const SearchInput = styled.input`\n  height: 40px;\n  width: 100%;\n  box-sizing: border-box;\n  border: 1px solid #ededed;\n  padding: 0 10px;\n\n  &:focus {\n    border-color: #0c0505;\n    outline: none;\n  }\n`;\nexport const SearchButton = styled.button`\n  border: none;\n  background-color: #ededed;\n  color: #000;\n  height: 40px;\n  padding: 0 20px;\n  cursor: pointer;\n  text-transform: uppercase;\n  transition: color 250ms linear, background-color 250ms linear;\n\n  &:hover {\n    background-color: #0c0505;\n    color: #fff;\n  }\n`;\n","import { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport {\n  SearchBox,\n  SearchForm,\n  SearchInput,\n  SearchButton,\n} from './SearchBar.styled';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [querySearch, setQuerySearch] = useState('');\n\n  const onChangeQuery = ({ currentTarget }) => {\n    setQuerySearch(currentTarget.value.toLowerCase());\n  };\n\n  const onSearchMovies = e => {\n    e.preventDefault();\n\n    if (querySearch.trim() === '') {\n      toast.warning('Search field is empty');\n      return;\n    }\n\n    onSubmit(querySearch);\n    setQuerySearch('');\n  };\n\n  return (\n    <SearchBox>\n      <SearchForm onSubmit={onSearchMovies}>\n        <SearchInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search films\"\n          name=\"text\"\n          value={querySearch}\n          onChange={onChangeQuery}\n        />\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </SearchForm>\n    </SearchBox>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const InfoTitle = styled.h2`\n  color: #000;\n  text-align: center;\n`;\n","import styled from '@emotion/styled';\n\nexport const LoadMoreBox = styled.div`\n  text-align: center;\n  margin-bottom: 50px;\n`;\nexport const LoadMoreButton = styled.button`\n  height: 40px;\n  padding: 0 20px;\n  border: none;\n  background-color: #ededed;\n  color: #000;\n  cursor: pointer;\n  text-transform: uppercase;\n  transition: color 250ms linear, background-color 250ms linear;\n\n  &:hover {\n    background-color: #0c0505;\n    color: #fff;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { LoadMoreBox, LoadMoreButton } from './LoadMore.styled';\n\nexport const LoadMore = ({ onClick }) => {\n  return (\n    <LoadMoreBox>\n      <LoadMoreButton type=\"button\" onClick={onClick}>\n        Load More\n      </LoadMoreButton>\n    </LoadMoreBox>\n  );\n};\n\nLoadMore.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getSearchMovies } from '../../components/API';\nimport { SearchBar } from '../../components/SearchBar/SearchBar';\nimport { Loader } from '../../components/Loader/Loader';\nimport MovieList from '../../components/MovieList/MovieList';\nimport { InfoTitle } from './MoviesPage.styled';\nimport { LoadMore } from '../../components/LoadMore/LoadMore';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalMovies, setTotalMovies] = useState(0);\n  const [loadings, setLoadings] = useState(false);\n  const [error, setError] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const querySearch = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!querySearch) {\n      return;\n    }\n\n    setLoadings(true);\n\n    try {\n      getSearchMovies(querySearch, page).then(({ results, total_pages }) => {\n        setLoadings(false);\n\n        if (results.length === 0) {\n          setError(`No results to show for \"${querySearch}!\"`);\n          return;\n        }\n        if (page > 1) {\n          return setMovies(prevMovies => [...prevMovies, ...results]);\n        }\n\n        setMovies(results);\n\n        setTotalMovies(total_pages);\n      });\n    } catch (error) {\n      toast.error(error);\n      setLoadings(false);\n    }\n  }, [querySearch, page]);\n\n  const searchMovies = newMovies => {\n    if (querySearch === newMovies) {\n      toast.info(`Movies matching '${querySearch}' have already been found`);\n      return;\n    }\n\n    setSearchParams(newMovies !== '' ? { query: newMovies } : {});\n    setMovies([]);\n    setLoadings(false);\n    setError(false);\n  };\n\n  const loadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <main className=\"container\">\n      <SearchBar onSubmit={searchMovies} />\n      {loadings && <Loader />}\n      {error && <InfoTitle>{error}</InfoTitle>}\n      {movies.length > 0 && <MovieList movies={movies} />}\n      {movies.length === 0 && !loadings && !error && (\n        <InfoTitle>There's nothing here yet 🧐</InfoTitle>\n      )}\n      {totalMovies > 0 && page !== totalMovies && !loadings && !error && (\n        <LoadMore onClick={loadMore} />\n      )}\n    </main>\n  );\n}\n"],"names":["API_KEY","axios","getPoster","img","defaultImg","getTrendingMovies","page","data","getSearchMovies","query","getMovieId","movie_id","getCast","getReviews","MovieContainer","styled","MovieItem","MovieLink","Link","MovieImg","MovieTitle","MovieList","movies","location","useLocation","movieItem","map","id","poster_path","title","to","state","from","src","alt","SearchBox","SearchForm","SearchInput","SearchButton","SearchBar","onSubmit","useState","querySearch","setQuerySearch","e","preventDefault","trim","toast","type","autoComplete","autoFocus","placeholder","name","value","onChange","currentTarget","toLowerCase","InfoTitle","LoadMoreBox","LoadMoreButton","LoadMore","onClick","MoviesPage","setMovies","setPage","totalMovies","setTotalMovies","loadings","setLoadings","error","setError","useSearchParams","searchParams","setSearchParams","get","useEffect","then","results","total_pages","length","prevMovies","className","newMovies","Loader","prevPage"],"sourceRoot":""}