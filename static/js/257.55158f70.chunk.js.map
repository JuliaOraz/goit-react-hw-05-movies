{"version":3,"file":"static/js/257.55158f70.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/API.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const BackLink = styled(NavLink)`\n  margin-bottom: 35px;\n  width: 100%;\n  display: block;\n  text-decoration: none;\n  font-size: 18px;\n  color: #000;\n  transition: color 250ms linear;\n\n  &:hover,\n  &:focus {\n    color: #5ac8fa;\n  }\n`;\n\nexport const MovieBox = styled.div`\n  display: flex;\n  border-bottom: 1px solid #ededed;\n  padding-bottom: 30px;\n  margin-bottom: 30px;\n`;\nexport const MoviePoster = styled.img`\n  margin-right: 35px;\n  width: 300px;\n`;\n\nexport const MovieTitle = styled.h1`\n  margin-bottom: 20px;\n  line-height: 1;\n`;\nexport const MovieScore = styled.p`\n  font-size: 18px;\n  margin-bottom: 30px;\n`;\nexport const MovieSubtitle = styled.h2`\n  margin-bottom: 15px;\n`;\nexport const MovieText = styled.p`\n  margin-bottom: 20px;\n`;\nexport const MovieList = styled.ul`\n  list-style: square;\n  padding-left: 20px;\n`;\nexport const MovieItem = styled.li`\n  margin-bottom: 10px;\n`;\nexport const AdditionalBox = styled.div`\n  margin-bottom: 30px;\n  border-bottom: 1px solid #ededed;\n  padding-bottom: 30px;\n`;\nexport const AdditionalLink = styled(NavLink)`\n  margin-right: 20px;\n  text-decoration: none;\n  color: #000;\n  font-weight: 600;\n  font-size: 18px;\n\n  &.active {\n    color: #5ac8fa;\n  }\n`;\n","import { useLocation, useParams, Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getMovieId, getPoster } from '../../services/API';\nimport { Loader } from '../../components/Loader/Loader';\nimport {\n  BackLink,\n  MovieBox,\n  MoviePoster,\n  MovieTitle,\n  MovieScore,\n  MovieSubtitle,\n  MovieText,\n  MovieList,\n  MovieItem,\n  AdditionalLink,\n  AdditionalBox,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    try {\n      getMovieId(movieId).then(data => setMovie(data));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  if (movie === null) {\n    return;\n  }\n\n  const { poster_path, title, vote_average, overview, genres, release_date } =\n    movie;\n  const img = getPoster(poster_path);\n  const releaseDate = new Date(release_date).getFullYear();\n\n  return (\n    <main className=\"container\">\n      <BackLink to={backLinkHref}>&larr; Back to</BackLink>\n      <MovieBox>\n        <MoviePoster src={img} alt=\"title\" />\n        <div>\n          <MovieTitle>\n            {title} ({releaseDate})\n          </MovieTitle>\n          <MovieScore>User score: {Math.round(vote_average * 10)}%</MovieScore>\n          {overview && (\n            <>\n              <MovieSubtitle>Overview</MovieSubtitle>\n              <MovieText>{overview}</MovieText>\n            </>\n          )}\n          {genres && (\n            <>\n              <MovieSubtitle>Genres</MovieSubtitle>\n              <MovieList>\n                {genres.map(({ id, name }) => {\n                  return <MovieItem key={id}>{name}</MovieItem>;\n                })}\n              </MovieList>\n            </>\n          )}\n        </div>\n      </MovieBox>\n      <AdditionalBox>\n        <MovieSubtitle>Additional information</MovieSubtitle>\n        <AdditionalLink to=\"cast\" state={{ from: backLinkHref }}>\n          Cast\n        </AdditionalLink>\n        <AdditionalLink to=\"reviews\" state={{ from: backLinkHref }}>\n          Reviews\n        </AdditionalLink>\n      </AdditionalBox>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n}\n","import axios from 'axios';\nimport defaultImg from '../img/no_image.jpg';\n\nconst API_KEY = '2994e3a31c3cad99fd99bf3fe61d916f';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getPoster = img => {\n  if (img === null) {\n    return defaultImg;\n  }\n  return `https://image.tmdb.org/t/p/w500${img}`;\n};\n\nexport const getTrendingMovies = async (page = 1) => {\n  const { data } = await axios.get(`/trending/movie/week?page=${page}`);\n  return data;\n};\n\nexport const getSearchMovies = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `/search/movie?query=${query}&page=${page}&include_adult=false`\n  );\n  return data;\n};\n\nexport const getMovieId = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const getCast = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/credits`);\n\n  return data;\n};\nexport const getReviews = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/reviews?page=1`);\n  return data;\n};\n"],"names":["BackLink","styled","NavLink","MovieBox","MoviePoster","MovieTitle","MovieScore","MovieSubtitle","MovieText","MovieList","MovieItem","AdditionalBox","AdditionalLink","MovieDetails","movieId","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","getMovieId","then","data","error","console","log","poster_path","title","vote_average","overview","genres","release_date","img","getPoster","releaseDate","Date","getFullYear","className","to","src","alt","Math","round","map","id","name","Suspense","fallback","Loader","axios","api_key","language","defaultImg","getTrendingMovies","page","getSearchMovies","query","movie_id","getCast","getReviews"],"sourceRoot":""}